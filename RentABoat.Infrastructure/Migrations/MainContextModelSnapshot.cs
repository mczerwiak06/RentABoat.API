// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentABoat.Infrastructure.Context;

#nullable disable

namespace RentABoat.Infrastructure.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("RentABoat.Infrastructure.Entities.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Harbour")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Length")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfBerths")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SailorAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("YearOfBuilt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SailorAccountId")
                        .IsUnique();

                    b.ToTable("Boat");
                });

            modelBuilder.Entity("RentABoat.Infrastructure.Entities.SailorAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BoatId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SailorAccount");
                });

            modelBuilder.Entity("RentABoat.Infrastructure.Entities.Boat", b =>
                {
                    b.HasOne("RentABoat.Infrastructure.Entities.SailorAccount", "SailorAccount")
                        .WithOne("Boat")
                        .HasForeignKey("RentABoat.Infrastructure.Entities.Boat", "SailorAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("SailorAccount");
                });

            modelBuilder.Entity("RentABoat.Infrastructure.Entities.SailorAccount", b =>
                {
                    b.Navigation("Boat")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
